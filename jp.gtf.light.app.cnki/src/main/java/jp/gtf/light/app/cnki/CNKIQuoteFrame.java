/*
 * © 2019 Gtf Software, Inc. All Rights Reserved
 * Mail fxd@hotmail.co.jp
 * More information please visit https://gtf.jp
 */
package jp.gtf.light.app.cnki;

import java.io.File;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import jp.gtf.kernel.lang.template.MemoryTemplate;
import jp.gtf.kernel.swing.utils.UTable;
import jp.gtf.light.app.cnki.object.DocReference;
import jp.gtf.light.app.cnki.service.CNKISearchManager;

/**
 * CNKI検索結果を参考文献に変換する
 *
 * @author F
 */
public class CNKIQuoteFrame extends javax.swing.JFrame {

    /**
     * Creates new form CNKIQuoteFrame
     */
    public CNKIQuoteFrame() {
        initComponents();
        // hook the value
        UTable.addFilter(tblSearchResult, textFilterResult);
        // ワックスペース存在有無チェック、存在しない場合を作成する
        File workspace = new File("./workspace");
        if (!workspace.exists()) {
            workspace.mkdirs();
        }
        // add database catalog
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_1_value1 = new javax.swing.JTextField();
        txt_1_sel = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSearchResult = new javax.swing.JTable();
        textFilterResult = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCreateTxtDocRef = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textDocRefOut = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textTemplate = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CNKI検索");

        txt_1_sel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "主题" }));

        btnSearch.setText("検索");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblSearchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "题名", "来源", "作者", "发表时间"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSearchResult);
        if (tblSearchResult.getColumnModel().getColumnCount() > 0) {
            tblSearchResult.getColumnModel().getColumn(0).setMinWidth(35);
            tblSearchResult.getColumnModel().getColumn(0).setMaxWidth(35);
            tblSearchResult.getColumnModel().getColumn(2).setMinWidth(150);
            tblSearchResult.getColumnModel().getColumn(2).setMaxWidth(150);
            tblSearchResult.getColumnModel().getColumn(3).setMinWidth(120);
            tblSearchResult.getColumnModel().getColumn(3).setMaxWidth(120);
            tblSearchResult.getColumnModel().getColumn(4).setMinWidth(100);
            tblSearchResult.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jLabel1.setText("Filter->");

        btnCreateTxtDocRef.setText("参考文献作成");
        btnCreateTxtDocRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateTxtDocRefActionPerformed(evt);
            }
        });

        textDocRefOut.setColumns(20);
        textDocRefOut.setRows(5);
        jScrollPane2.setViewportView(textDocRefOut);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFilterResult, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreateTxtDocRef))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFilterResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnCreateTxtDocRef))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("検索結果", jPanel1);

        textTemplate.setColumns(20);
        textTemplate.setRows(5);
        textTemplate.setText("${index}、${author}:《${subject}》,《${from}》，${publishedDate}。");
        jScrollPane4.setViewportView(textTemplate);

        jLabel4.setText("参考文献のフォーマット設定");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(401, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("設定", jPanel3);

        jLabel2.setText("←時間かかる場合があります。");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_1_sel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_1_value1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(276, 276, 276)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_1_value1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_1_sel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String keyType = "SU$%=|";

        List<DocReference> datas = CNKISearchManager.search(
                keyType,
                txt_1_value1.getText());
        // display the data in table
        UTable.clear(tblSearchResult);
        datas.forEach((data) -> {
            UTable.append(tblSearchResult, false,
                    data.getSubject(),
                    data.getFrom(),
                    data.getAuthor(),
                    data.getPublishedDate());
        });
        // save the data to excel
        CNKISearchManager.saveToExcel(datas, "workspace/" + txt_1_value1.getText() + ".xlsx");
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCreateTxtDocRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateTxtDocRefActionPerformed
        StringBuilder sb = new StringBuilder();
        AtomicInteger index = new AtomicInteger(1);
        UTable.forEach(tblSearchResult, (Object[] vs) -> {
            if (Boolean.class.cast(vs[0])) {
                // ${index}、${author}:《${subject}》,《${from}》，${publishedDate}。
                MemoryTemplate template = new MemoryTemplate(textTemplate.getText());
                template.addAttribute("index", index.getAndIncrement());
                template.addAttribute("subject", vs[1]);
                template.addAttribute("from", vs[2]);
                template.addAttribute("author", vs[3]);
                template.addAttribute("publishedDate", vs[4]);
                sb.append(template.render());
                sb.append(System.getProperty("line.separator"));
            }
        });
        textDocRefOut.setText(sb.toString());
    }//GEN-LAST:event_btnCreateTxtDocRefActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CNKIQuoteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CNKIQuoteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CNKIQuoteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CNKIQuoteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CNKIQuoteFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateTxtDocRef;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable tblSearchResult;
    private javax.swing.JTextArea textDocRefOut;
    private javax.swing.JTextField textFilterResult;
    private javax.swing.JTextArea textTemplate;
    private javax.swing.JComboBox<String> txt_1_sel;
    private javax.swing.JTextField txt_1_value1;
    // End of variables declaration//GEN-END:variables
}
